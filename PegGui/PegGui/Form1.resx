<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzliEA85YhIPOWIVrzliFa85YhWvOW
        IVrzliFa85YhWvOWIVrzliFa85YhWvOWIVrzliFa85YhWvOWIVrzliFa85YhWvOWIVrzliFa85YhWvOW
        IVrzliFa85YhWvOWIVrzliFa85YhWvOWIVrzliFa85YhIPOWIQAAAAAAAAAAAPOWIQDzliFa85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliFa85YhAAAAAAAAAAAA85YhAPOW
        IVrzliD/85Ug//OWIf/zlSD/85Yh//OWIf/zlSD/85Yh//OVIP/zliD/85Yh//OVIP/zliD/85Yg//OV
        IP/zliH/85Yg//OVIP/zliH/85Ug//OWIf/zliH/85Ug//OWIf/zlSD/85Yg//OWIVrzliEAAAAAAAAA
        AAD3t2YA97dnWveyXf/0ojv/85kn//WoSP/3tWP/97Vj//WoSP/zmSf/9KI6//eyXf/3tmb/9q5U//Sc
        Lv/znC7/9q5U//e2Zv/3sl3/9KI7//OZJ//1qEj/97Vj//e1Y//1qEj/85kn//SiOv/3sl3/97dnWve3
        ZgAAAAAAAAAAAPnLkgD5y5Ja+cuS//jEg//3uW7/+ciM//rMkv/6zJL/+ciN//e6bv/4xIP/+suS//vM
        k//6y5H/+L53//i+d//6y5H/+8yT//rLkv/4xIP/97lu//nIjP/6zJL/+syS//nIjf/3um7/+MSD//nL
        kv/5y5Ja+cuSAAAAAAAAAAAA+cqQAPnKkFD5ypDs+suR/fvMkv/1x47/57yG/+e8hv/1x47/+8yS//nK
        kP/qv4j/5bqF//DDi//7zJL/+8yS//DDi//luoX/6r+I//nKkP/7zJL/9ceO/+e8hv/nvIb/9ceO/vnL
        kf/5ypD9+cqQ7PnKkFD5ypAAAAAAAAAAAAD5ypEA+cqRC/3NkjHit4Oc0qt6/4JsTv9VSTb/VUk2/4Fs
        Tv/Sq3v/oINf/11POv9RRjT/a1pC/76bcP++nHD/a1pC/1FGNP9dUDr/n4Nf/9Ore/+CbE7/VUk2/1VJ
        Nv6oi2Sn/c2SyfnKkIn5ypAy+cqRC/nKkQAAAAAAAAAAAAAAAAAAAAAAUEU0AE9FNFpTSDb/PDYp/zs1
        Kf87NSn/PDYp/1NINv9COiz/OjUo/zw1Kf86NCj/S0Iy/0xCMv86NCj/PDUp/zo1KP9COiz/U0g2/zw2
        Kf87NSn/OzUp/z03KVv/5qQZ+cqPCfnKkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeVEAAXlVBW15U
        QP9fVUH/X1VB/19VQf9fVUH/XlRA/15VQf9fVUH/X1VB/19VQf9eVUH/XlVB/19VQf9fVUH/X1VB/19V
        Qf9eVED/X1ZC/19WQv9fVUH/YVdCkGZcRwNiV0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRa
        RABkWkV1ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRf9hV0P/X1ZC/2JYRP9kWkXvZFpFYmRbQwNkWkQAAAAAAAAAAAAAAAAAAAAAAAAA
        AABkWkUAZFpFHGRaRcRkWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RaRf9kWkX/YVdD/0U+MP88Nir/T0c3/2RaRf9kWkXvZFpFfWRaRBFjW0QAAAAAAAAA
        AAAAAAAAAAAAAGRaRQBkWkWOZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2NZ
        RP9jWUT/Y1lE/2NZRP9jWUT/Y1lE/2NZRP9iWEP/V088/1NLOf9cUz//ZFpF/2RaRf9kWkX+ZFpFi2Ra
        RQAAAAAAAAAAAAAAAAAAAAAAZFpFAGRaRW1kWkWoZFpFpWRaRaRlW0WuamBK9GthSv9rYUr/a2FK/2th
        Sv9tYkv/d2xW/3htV/94blf/eG1X/3htV/94blf/eG1X/3htV/94blf/d21X9WheSK9kWkWkZFpFpWRa
        RalkWkVtZFpFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAem5UAIh8Yy1/c1nlfnJY/35y
        WP9+clj/fHBW/35yWP+YjHT/m493/5SJcv+ZjXb/mY12/5SJcv+bj3f/nJB4/5yQeP+ckHjfnJB4HJyQ
        eAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8cEYAm494lpiM
        dP+YjHT/mIx0/5mNdf+NgWj/fnJY/5mNdP+UiXL/YFZF/4V6ZP+FemT/YFZF/5SJcf+dkXj/nJB4/5eL
        c6qGemAU////AHhuVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6bVQAe21UAXZr
        UROUiG+hnJB4/5aLc/9vZlL/in9p/5GFbP9+clj/mY11/5qOd/+EeWT/k4hx/5OHcP+EeWT/mY11/52R
        eP+UiHDufXFY4HpuVMJ6blSWem5UYnpuVDN4blQHeW5UAAAAAAAAAAAAAAAAAAAAAAAAAAAAem5UAHpu
        VDB6blSXem5Uz3xwVuCUiG/ilotz/m9mUv+Kf2n/kYVs/31xV/+NgWj/kIRr/5GFbP+RhWz1m492r56S
        eqSckHilnJB4n5CEa1V5bVNdem5UknpuVMB6blThem5UynpuVB96blQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB6blQAem5US3puVLt6blSEeWxSRJOHb0CckHjJnJB445yQeN+WinLdfnJY4XZrUft4bFLpeW1T3nlt
        U8R5bVMZeW1TAAAAAAAAAAAAAAAAAHxwVwB8cVgAem5VC3puVCR6blQ5e21UCHttVAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHpvUwB6b1MGem5UCoVgUQCZiXIAnY94AZyQeBWckHgdnJB4V52ReHiRhW6He3Ba74Z6
        Y6iViXB1lIhvaZSIbw6UiG8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAPDACckHilnJB4/5yQ
        eP+dkXn/nJB4/5yQeP+ckHjinJB4HZyQeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgoIAJyQ
        eGuckHinmY11r4p+Z/WTh3DFnZF5pZyQeJKckHgTnJB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnJB4AJ2ReTqZjXWwin5n9ZOHcMmdkXlrnJB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACckHgAnJB4TJyQePadkXn/nJB4/5yQeJOckHgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuPeACbj3gJnJB4fpyQeOKckHiwnJB4IpyQeAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJyQeACbj3gHnJB4HJyQeA+ckHgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPwAAAP8AAAH/AAAA/gAAAH4AAAB+AAAAf+AAB//gAAf/gAAAfwAAAH8AAfh/MAH///4B///+Af///w
        f///8H////B////4//////////////////8=
</value>
  </data>
</root>